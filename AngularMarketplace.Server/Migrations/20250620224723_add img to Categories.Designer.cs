// <auto-generated />
using System;
using AngularMarketplace.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AngularMarketplace.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250620224723_add img to Categories")]
    partial class addimgtoCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("DataAccess.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("description");

                    b.Property<string>("Mask")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("mask");

                    b.Property<float>("Price")
                        .HasColumnType("REAL")
                        .HasColumnName("price");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarhcar(50)")
                        .HasColumnName("title");

                    b.Property<string>("Url_Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("url_title");

                    b.Property<string>("img1")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("img2")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("img3")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("img4")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("img5")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("img6")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("tblProducts");
                });

            modelBuilder.Entity("DataAccess.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSubCategory")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mask")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("mask");

                    b.Property<int?>("ParentID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("title");

                    b.Property<string>("Url_Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("url_title");

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("ParentID");

                    b.ToTable("tblProductCategories");
                });

            modelBuilder.Entity("DataAccess.Entities.Product", b =>
                {
                    b.HasOne("DataAccess.Entities.ProductCategory", "Category")
                        .WithMany("ProductsList")
                        .HasForeignKey("CategoryID");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DataAccess.Entities.ProductCategory", b =>
                {
                    b.HasOne("DataAccess.Entities.ProductCategory", "Parent")
                        .WithMany("SubCategoriesList")
                        .HasForeignKey("ParentID");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DataAccess.Entities.ProductCategory", b =>
                {
                    b.Navigation("ProductsList");

                    b.Navigation("SubCategoriesList");
                });
#pragma warning restore 612, 618
        }
    }
}
